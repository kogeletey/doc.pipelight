# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: bash -l
  
  # Specify the current working directory path
  # the default is the current working directory path
  cwd: /home/areskul/Tools/PIPE/doc.pipelight
  
  # Export additional ENV variables
  env:
    recording: true
  
  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 156
  
  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 39
  
  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0
  
  # Quality
  # 1 - 100
  quality: 100
  
  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto
  
  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 2000
  
  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: Terminalizer
    style:
      border: 0px black solid
      # boxShadow: none
      # margin: 0px
  
  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9
  
  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block
  
  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"
  
  # The size of the font
  fontSize: 12
  
  # The height of lines
  lineHeight: 1
  
  # The spacing between letters
  letterSpacing: 0
  
  # Theme
  theme:
    background: "transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"
  
# Records, feel free to edit them
records:
  - delay: 495
    content: "\e]0;areskul@bakugo:~/Tools/PIPE/doc.pipelight\a\e[?2004h\e[01;32m[areskul@bakugo\e[01;37m doc.pipelight\e[01;32m]$\e[00m "
  - delay: 825
    content: p
  - delay: 108
    content: i
  - delay: 199
    content: p
  - delay: 90
    content: e
  - delay: 158
    content: l
  - delay: 227
    content: i
  - delay: 175
    content: g
  - delay: 131
    content: h
  - delay: 70
    content: t
  - delay: 2883
    content: "\r\n\e[?2004l\r\e[1m\e[4mUsage:\e[0m \e[1mpipelight\e[0m [OPTIONS] \e[1m[--\e[0m <RAW>...\e[1m]\e[0m <COMMAND>\r\n\r\n\e[1m\e[4mCommands:\e[0m\r\n  \e[1mrun\e[0m         Run a pipeline\r\n  \e[1mstop\e[0m        Stop the pipeline execution (kill subprocess)\r\n  \e[1mlogs\e[0m        Display logs\r\n  \e[1mls\e[0m          List pipelines\r\n  \e[1minspect\e[0m     List pipelines (intercative)\r\n  \e[1mtrigger\e[0m     Manualy Triggers Pipelines\r\n  \e[1mwatch\e[0m       Launch a watcher on directory\r\n  \e[1mcompletion\e[0m  Generate autocompletion script\r\n  \e[1mhelp\e[0m        Print this message or the help of the given subcommand(s)\r\n\r\n\e[1m\e[4mArguments:\e[0m\r\n  [RAW]...  Pass those arguments to deno\r\n\r\n\e[1m\e[4mOptions:\e[0m\r\n      \e[1m--attach\e[0m      Attach command to standard I/O\r\n  \e[1m-v\e[0m, \e[1m--verbose\e[0m...  More output per occurrence\r\n  \e[1m-q\e[0m, \e[1m--quiet\e[0m...    Less output per occurrence\r\n  \e[1m-h\e[0m, \e[1m--help\e[0m        Print help\r\n\e]0;areskul@bakugo:~/Tools/PIPE/doc.pipelight\a\e[?2004h\e[01;32m[areskul@bakugo\e[01;37m doc.pipelight\e[01;32m]$\e[00m "
  - delay: 1309
    content: pipelight
  - delay: 467
    content: ' '
  - delay: 203
    content: l
  - delay: 83
    content: s
  - delay: 239
    content: "\r\n\e[?2004l\r"
  - delay: 440
    content: "deploy_production_doc                   \r\n\e]0;areskul@bakugo:~/Tools/PIPE/doc.pipelight\a\e[?2004h\e[01;32m[areskul@bakugo\e[01;37m doc.pipelight\e[01;32m]$\e[00m "
  - delay: 667
    content: pipelight ls
  - delay: 1303
    content: "\b\e[K"
  - delay: 500
    content: "\b\e[K"
  - delay: 34
    content: "\b\e[K"
  - delay: 33
    content: "\b\e[K"
  - delay: 31
    content: "\b\e[K"
  - delay: 23
    content: "\b\e[K"
  - delay: 31
    content: "\b\e[K"
  - delay: 29
    content: "\b\e[K"
  - delay: 29
    content: "\b\e[K"
  - delay: 31
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\a"
  - delay: 30
    content: "\a"
  - delay: 30
    content: "\a"
  - delay: 29
    content: "\a"
  - delay: 30
    content: "\a"
  - delay: 270
    content: "\e[H\e[2J\e[01;32m[areskul@bakugo\e[01;37m doc.pipelight\e[01;32m]$\e[00m "
  - delay: 838
    content: p
  - delay: 142
    content: i
  - delay: 392
    content: "\a"
  - delay: 1143
    content: p
  - delay: 75
    content: e
  - delay: 161
    content: l
  - delay: 218
    content: i
  - delay: 105
    content: g
  - delay: 140
    content: h
  - delay: 67
    content: t
  - delay: 419
    content: ' '
  - delay: 1502
    content: "\b\e[K"
  - delay: 501
    content: "\b\e[K"
  - delay: 34
    content: "\b\e[K"
  - delay: 44
    content: "\b\e[K"
  - delay: 11
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 31
    content: "\b\e[K"
  - delay: 30
    content: "\a"
  - delay: 29
    content: "\a"
  - delay: 30
    content: "\a"
  - delay: 31
    content: "\a"
  - delay: 29
    content: "\a"
  - delay: 31
    content: "\a"
  - delay: 5929
    content: p
  - delay: 109
    content: i
  - delay: 206
    content: p
  - delay: 61
    content: e
  - delay: 813
    content: "\b\e[K"
  - delay: 501
    content: "\b\e[K"
  - delay: 49
    content: "\b\e[K"
  - delay: 17
    content: "\b\e[K"
  - delay: 30
    content: "\a"
  - delay: 24
    content: "\a"
  - delay: 30
    content: "\a"
  - delay: 29
    content: "\a"
  - delay: 31
    content: "\a"
  - delay: 31
    content: "\a"
  - delay: 28
    content: "\a"
  - delay: 237
    content: s
  - delay: 316
    content: o
  - delay: 134
    content: u
  - delay: 172
    content: r
  - delay: 232
    content: c
  - delay: 84
    content: e
  - delay: 156
    content: ' '
  - delay: 434
    content: p
  - delay: 81
    content: i
  - delay: 194
    content: p
  - delay: 453
    content: 'elight.ts '
  - delay: 1070
    content: "\b\e[K"
  - delay: 500
    content: "\b\e[K"
  - delay: 35
    content: "\b\e[K"
  - delay: 31
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 24
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 29
    content: "\b\e[K"
  - delay: 32
    content: "\b\e[K"
  - delay: 29
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 31
    content: "\b\e[K"
  - delay: 29
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\b\e[K"
  - delay: 30
    content: "\a"
  - delay: 29
    content: "\a"
  - delay: 32
    content: "\a"
  - delay: 29
    content: "\a"
  - delay: 28
    content: "\a"
  - delay: 36
    content: "\a"
  - delay: 24
    content: "\a"
  - delay: 31
    content: "\a"
  - delay: 31
    content: "\a"
  - delay: 29
    content: "\a"
  - delay: 393
    content: p
  - delay: 115
    content: i
  - delay: 264
    content: p
  - delay: 438
    content: "\a"
  - delay: 1199
    content: e
  - delay: 135
    content: l
  - delay: 181
    content: i
  - delay: 175
    content: g
  - delay: 125
    content: h
  - delay: 55
    content: t
  - delay: 279
    content: ' '
  - delay: 2286
    content: "\r\n\e[?2004l\r\e[1m\e[4mUsage:\e[0m \e[1mpipelight\e[0m [OPTIONS] \e[1m[--\e[0m <RAW>...\e[1m]\e[0m <COMMAND>\r\n\r\n\e[1m\e[4mCommands:\e[0m\r\n  \e[1mrun\e[0m         Run a pipeline\r\n  \e[1mstop\e[0m        Stop the pipeline execution (kill subprocess)\r\n  \e[1mlogs\e[0m        Display logs\r\n  \e[1mls\e[0m          List pipelines\r\n  \e[1minspect\e[0m     List pipelines (intercative)\r\n  \e[1mtrigger\e[0m     Manualy Triggers Pipelines\r\n  \e[1mwatch\e[0m       Launch a watcher on directory\r\n  \e[1mcompletion\e[0m  Generate autocompletion script\r\n  \e[1mhelp\e[0m        Print this message or the help of the given subcommand(s)\r\n\r\n\e[1m\e[4mArguments:\e[0m\r\n  [RAW]...  Pass those arguments to deno\r\n\r\n\e[1m\e[4mOptions:\e[0m\r\n      \e[1m--attach\e[0m      Attach command to standard I/O\r\n  \e[1m-v\e[0m, \e[1m--verbose\e[0m...  More output per occurrence\r\n  \e[1m-q\e[0m, \e[1m--quiet\e[0m...    Less output per occurrence\r\n  \e[1m-h\e[0m, \e[1m--help\e[0m        Print help\r\n\e]0;areskul@bakugo:~/Tools/PIPE/doc.pipelight\a\e[?2004h\e[01;32m[areskul@bakugo\e[01;37m doc.pipelight\e[01;32m]$\e[00m "
  - delay: 2596
    content: "\e[?2004l\r\r\nlogout\r\n"
